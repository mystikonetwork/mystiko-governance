/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoRelayerRegistry,
  MystikoRelayerRegistryInterface,
} from '../../../../../contracts/Settings/miner/impl/MystikoRelayerRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_center',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_vXZK',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientBalanceForAction',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRelayer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'MinVoteTokenAmountChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RelayerAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RelayerRemoved',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_newRelayers',
        type: 'address[]',
      },
    ],
    name: 'addRelayers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'pool',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
        ],
        internalType: 'struct CanDoRelayParams',
        name: '_params',
        type: 'tuple',
      },
    ],
    name: 'canDoRelay',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newMinVoteTokenAmount',
        type: 'uint256',
      },
    ],
    name: 'changeMinVoteTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minVoteTokenAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'relayers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_oldRelayers',
        type: 'address[]',
      },
    ],
    name: 'removeRelayers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vXZK',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516108b63803806108b683398101604081905261002f9161008a565b600080546001600160a01b039384166001600160a01b03199182161790915569152d02c7e14af6800000600255600380549290931691161790556100bd565b80516001600160a01b038116811461008557600080fd5b919050565b6000806040838503121561009d57600080fd5b6100a68361006e565b91506100b46020840161006e565b90509250929050565b6107ea806100cc6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bf420c561161005b578063bf420c561461011c578063e254001c1461012f578063f4cb33cc14610142578063f5e90f941461015557600080fd5b80631f02d7151461008d5780635300f841146100bd57806374feb059146100f0578063a2fb4e0f14610107575b600080fd5b6000546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e06100cb366004610677565b60016020526000908152604090205460ff1681565b60405190151581526020016100b4565b6100f960025481565b6040519081526020016100b4565b61011a61011536600461069b565b610168565b005b6100e061012a3660046106b4565b610259565b6003546100a0906001600160a01b031681565b61011a6101503660046106cc565b610397565b61011a6101633660046106cc565b6104fd565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d59190610741565b6001600160a01b0316146101fc5760405163177bc95160e11b815260040160405180910390fd5b806002540361021e576040516336a1c33f60e01b815260040160405180910390fd5b60028190556040518181527f3435d40390b03876ac5cca635ea7f2c76126b18427354d029d29faeaf9c9765e9060200160405180910390a150565b600254600354600091906001600160a01b03166370a082316102816040860160208701610677565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156102c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e9919061075e565b10156103085760405163f241cafb60e01b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb495460ff161580156103715750600160006103526040850160208601610677565b6001600160a01b0316815260208101919091526040016000205460ff16155b1561038f5760405163c64891a560e01b815260040160405180910390fd5b506001919050565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190610741565b6001600160a01b03161461042b5760405163177bc95160e11b815260040160405180910390fd5b60005b818110156104f857600180600085858581811061044d5761044d610777565b90506020020160208101906104629190610677565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061049c5761049c610777565b90506020020160208101906104b19190610677565b6001600160a01b03167f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c560405160405180910390a2806104f08161078d565b91505061042e565b505050565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a9190610741565b6001600160a01b0316146105915760405163177bc95160e11b815260040160405180910390fd5b60005b818110156104f8576000600160008585858181106105b4576105b4610777565b90506020020160208101906105c99190610677565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061060357610603610777565b90506020020160208101906106189190610677565b6001600160a01b03167f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b60405160405180910390a2806106578161078d565b915050610594565b6001600160a01b038116811461067457600080fd5b50565b60006020828403121561068957600080fd5b81356106948161065f565b9392505050565b6000602082840312156106ad57600080fd5b5035919050565b6000604082840312156106c657600080fd5b50919050565b600080602083850312156106df57600080fd5b823567ffffffffffffffff808211156106f757600080fd5b818501915085601f83011261070b57600080fd5b81358181111561071a57600080fd5b8660208260051b850101111561072f57600080fd5b60209290920196919550909350505050565b60006020828403121561075357600080fd5b81516106948161065f565b60006020828403121561077057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016107ad57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220133e5d4e76af7e6153d711cb2336964caddee8c58f8ca1594d438422f06347b964736f6c63430008140033';

type MystikoRelayerRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoRelayerRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoRelayerRegistry__factory extends ContractFactory {
  constructor(...args: MystikoRelayerRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _center: string,
    _vXZK: string,
    overrides?: Overrides & { from?: string },
  ): Promise<MystikoRelayerRegistry> {
    return super.deploy(_center, _vXZK, overrides || {}) as Promise<MystikoRelayerRegistry>;
  }
  override getDeployTransaction(
    _center: string,
    _vXZK: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_center, _vXZK, overrides || {});
  }
  override attach(address: string): MystikoRelayerRegistry {
    return super.attach(address) as MystikoRelayerRegistry;
  }
  override connect(signer: Signer): MystikoRelayerRegistry__factory {
    return super.connect(signer) as MystikoRelayerRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoRelayerRegistryInterface {
    return new utils.Interface(_abi) as MystikoRelayerRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoRelayerRegistry {
    return new Contract(address, _abi, signerOrProvider) as MystikoRelayerRegistry;
  }
}
