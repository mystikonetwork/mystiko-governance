/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoRelayerRegistry,
  MystikoRelayerRegistryInterface,
} from '../../../../../contracts/Settings/miner/impl/MystikoRelayerRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_center',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_vXZK',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_minVoteTokenAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientBalanceForAction',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRelayer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'MinVoteTokenAmountChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RelayerAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RelayerRemoved',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_newRelayers',
        type: 'address[]',
      },
    ],
    name: 'addRelayers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'pool',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayer',
            type: 'address',
          },
        ],
        internalType: 'struct CanDoRelayParams',
        name: '_params',
        type: 'tuple',
      },
    ],
    name: 'canDoRelay',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newMinVoteTokenAmount',
        type: 'uint256',
      },
    ],
    name: 'changeMinVoteTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isRelayer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minVoteTokenAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'relayers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_oldRelayers',
        type: 'address[]',
      },
    ],
    name: 'removeRelayers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vXZK',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516108e13803806108e183398101604081905261002f91610082565b600080546001600160a01b039485166001600160a01b031991821617909155600291909155600380549290931691161790556100be565b80516001600160a01b038116811461007d57600080fd5b919050565b60008060006060848603121561009757600080fd5b6100a084610066565b92506100ae60208501610066565b9150604084015190509250925092565b610814806100cd6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a2fb4e0f11610066578063a2fb4e0f1461013e578063bf420c5614610153578063e254001c14610166578063f4cb33cc14610179578063f5e90f941461018c57600080fd5b80631f02d715146100985780635300f841146100c8578063541d5548146100fb57806374feb05914610127575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100eb6100d63660046106a1565b60016020526000908152604090205460ff1681565b60405190151581526020016100bf565b6100eb6101093660046106a1565b6001600160a01b031660009081526001602052604090205460ff1690565b61013060025481565b6040519081526020016100bf565b61015161014c3660046106c5565b61019f565b005b6100eb6101613660046106de565b610290565b6003546100ab906001600160a01b031681565b6101516101873660046106f6565b6103c1565b61015161019a3660046106f6565b610527565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c919061076b565b6001600160a01b0316146102335760405163177bc95160e11b815260040160405180910390fd5b8060025403610255576040516336a1c33f60e01b815260040160405180910390fd5b60028190556040518181527f3435d40390b03876ac5cca635ea7f2c76126b18427354d029d29faeaf9c9765e9060200160405180910390a150565b60006102a260408301602084016106a1565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb495460ff1661030d576001600160a01b03811660009081526001602052604090205460ff1661030d5760405163c64891a560e01b815260040160405180910390fd5b6002546003546001600160a01b03166370a0823161033160408701602088016106a1565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610788565b10156103b85760405163f241cafb60e01b815260040160405180910390fd5b50600192915050565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e919061076b565b6001600160a01b0316146104555760405163177bc95160e11b815260040160405180910390fd5b60005b81811015610522576001806000858585818110610477576104776107a1565b905060200201602081019061048c91906106a1565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106104c6576104c66107a1565b90506020020160208101906104db91906106a1565b6001600160a01b03167f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c560405160405180910390a28061051a816107b7565b915050610458565b505050565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610570573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610594919061076b565b6001600160a01b0316146105bb5760405163177bc95160e11b815260040160405180910390fd5b60005b81811015610522576000600160008585858181106105de576105de6107a1565b90506020020160208101906105f391906106a1565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061062d5761062d6107a1565b905060200201602081019061064291906106a1565b6001600160a01b03167f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b60405160405180910390a280610681816107b7565b9150506105be565b6001600160a01b038116811461069e57600080fd5b50565b6000602082840312156106b357600080fd5b81356106be81610689565b9392505050565b6000602082840312156106d757600080fd5b5035919050565b6000604082840312156106f057600080fd5b50919050565b6000806020838503121561070957600080fd5b823567ffffffffffffffff8082111561072157600080fd5b818501915085601f83011261073557600080fd5b81358181111561074457600080fd5b8660208260051b850101111561075957600080fd5b60209290920196919550909350505050565b60006020828403121561077d57600080fd5b81516106be81610689565b60006020828403121561079a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016107d757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220cc8e07c0ad27218676f8712c75928cf8b06ddfd6434d6bad31b7d711dd5c6dc164736f6c63430008140033';

type MystikoRelayerRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoRelayerRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoRelayerRegistry__factory extends ContractFactory {
  constructor(...args: MystikoRelayerRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _center: string,
    _vXZK: string,
    _minVoteTokenAmount: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<MystikoRelayerRegistry> {
    return super.deploy(
      _center,
      _vXZK,
      _minVoteTokenAmount,
      overrides || {},
    ) as Promise<MystikoRelayerRegistry>;
  }
  override getDeployTransaction(
    _center: string,
    _vXZK: string,
    _minVoteTokenAmount: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_center, _vXZK, _minVoteTokenAmount, overrides || {});
  }
  override attach(address: string): MystikoRelayerRegistry {
    return super.attach(address) as MystikoRelayerRegistry;
  }
  override connect(signer: Signer): MystikoRelayerRegistry__factory {
    return super.connect(signer) as MystikoRelayerRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoRelayerRegistryInterface {
    return new utils.Interface(_abi) as MystikoRelayerRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoRelayerRegistry {
    return new Contract(address, _abi, signerOrProvider) as MystikoRelayerRegistry;
  }
}
