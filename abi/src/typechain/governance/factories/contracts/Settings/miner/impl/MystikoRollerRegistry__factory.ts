/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoRollerRegistry,
  MystikoRollerRegistryInterface,
} from '../../../../../contracts/Settings/miner/impl/MystikoRollerRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_center',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_vXZK',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientBalanceForAction',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_size',
        type: 'uint256',
      },
    ],
    name: 'MinRollupSizeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'MinVoteTokenAmountChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RollerAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RollerRemoved',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_newRollers',
        type: 'address[]',
      },
    ],
    name: 'addRollers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'pool',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'roller',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'rollupSize',
            type: 'uint256',
          },
        ],
        internalType: 'struct CanDoRollupParams',
        name: '_params',
        type: 'tuple',
      },
    ],
    name: 'canDoRollup',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newMinRollupSize',
        type: 'uint256',
      },
    ],
    name: 'changeMinRollupSize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newMinVoteTokenAmount',
        type: 'uint256',
      },
    ],
    name: 'changeMinVoteTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minVoteTokenAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_oldRollers',
        type: 'address[]',
      },
    ],
    name: 'removeRollers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vXZK',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516109fe3803806109fe83398101604081905261002f9161008f565b600080546001600160a01b039384166001600160a01b03199182161790915569152d02c7e14af68000006002556001600355600480549290931691161790556100c2565b80516001600160a01b038116811461008a57600080fd5b919050565b600080604083850312156100a257600080fd5b6100ab83610073565b91506100b960208401610073565b90509250929050565b61092d806100d16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a2fb4e0f11610066578063a2fb4e0f14610145578063bd3fb70514610158578063dd53f8a11461016b578063e254001c1461017e578063ecf773ec1461019157600080fd5b80631f02d715146100a3578063560f17bf146100d357806367eb51aa146100e857806374feb059146100fb5780637ea7311514610112575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e13660046107a2565b61019a565b005b6100e66100f6366004610817565b610301565b61010460025481565b6040519081526020016100ca565b610135610120366004610848565b60016020526000908152604090205460ff1681565b60405190151581526020016100ca565b6100e6610153366004610817565b6103f3565b6100e66101663660046107a2565b6104de565b61013561017936600461086c565b61063f565b6004546100b6906001600160a01b031681565b61010460035481565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156101e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102079190610884565b6001600160a01b03161461022e5760405163177bc95160e11b815260040160405180910390fd5b60005b818110156102fc57600060016000858585818110610251576102516108a1565b90506020020160208101906102669190610848565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106102a0576102a06108a1565b90506020020160208101906102b59190610848565b6001600160a01b03167f7aea1b5cb62b4de72b5cc424dd6bc8982496fbc12eabf4ec0a295e77a45601c060405160405180910390a2806102f4816108b7565b915050610231565b505050565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610884565b6001600160a01b0316146103955760405163177bc95160e11b815260040160405180910390fd5b80600354036103b7576040516336a1c33f60e01b815260040160405180910390fd5b60038190556040518181527fe1f038c60e1a2d2ed2958fbb3feefb7f259dedc375ad27e6a53bf91e9fa2feca906020015b60405180910390a150565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561043c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104609190610884565b6001600160a01b0316146104875760405163177bc95160e11b815260040160405180910390fd5b80600254036104a9576040516336a1c33f60e01b815260040160405180910390fd5b60028190556040518181527f3435d40390b03876ac5cca635ea7f2c76126b18427354d029d29faeaf9c9765e906020016103e8565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610884565b6001600160a01b0316146105725760405163177bc95160e11b815260040160405180910390fd5b60005b818110156102fc576001806000858585818110610594576105946108a1565b90506020020160208101906105a99190610848565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106105e3576105e36108a1565b90506020020160208101906105f89190610848565b6001600160a01b03167f7f479989413500d382af813fbbcbde6aafad79de8e12e5ffb1d2d198cadd5ae760405160405180910390a280610637816108b7565b915050610575565b6000600354826040013510156106685760405163150a617b60e31b815260040160405180910390fd5b6002546004546001600160a01b03166370a0823161068c6040860160208701610848565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f491906108de565b10156107135760405163f241cafb60e01b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb495460ff1615801561077c57506001600061075d6040850160208601610848565b6001600160a01b0316815260208101919091526040016000205460ff16155b1561079a57604051632d062f3360e21b815260040160405180910390fd5b506001919050565b600080602083850312156107b557600080fd5b823567ffffffffffffffff808211156107cd57600080fd5b818501915085601f8301126107e157600080fd5b8135818111156107f057600080fd5b8660208260051b850101111561080557600080fd5b60209290920196919550909350505050565b60006020828403121561082957600080fd5b5035919050565b6001600160a01b038116811461084557600080fd5b50565b60006020828403121561085a57600080fd5b813561086581610830565b9392505050565b60006060828403121561087e57600080fd5b50919050565b60006020828403121561089657600080fd5b815161086581610830565b634e487b7160e01b600052603260045260246000fd5b6000600182016108d757634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156108f057600080fd5b505191905056fea26469706673582212209e00a1f8e2c3b097e002eb36c8113cd986a53988ced60fb3df2acfa5ea4f14cb64736f6c63430008140033';

type MystikoRollerRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoRollerRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoRollerRegistry__factory extends ContractFactory {
  constructor(...args: MystikoRollerRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _center: string,
    _vXZK: string,
    overrides?: Overrides & { from?: string },
  ): Promise<MystikoRollerRegistry> {
    return super.deploy(_center, _vXZK, overrides || {}) as Promise<MystikoRollerRegistry>;
  }
  override getDeployTransaction(
    _center: string,
    _vXZK: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_center, _vXZK, overrides || {});
  }
  override attach(address: string): MystikoRollerRegistry {
    return super.attach(address) as MystikoRollerRegistry;
  }
  override connect(signer: Signer): MystikoRollerRegistry__factory {
    return super.connect(signer) as MystikoRollerRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoRollerRegistryInterface {
    return new utils.Interface(_abi) as MystikoRollerRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoRollerRegistry {
    return new Contract(address, _abi, signerOrProvider) as MystikoRollerRegistry;
  }
}
