/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoRollerRegistry,
  MystikoRollerRegistryInterface,
} from '../../../../../contracts/Settings/miner/impl/MystikoRollerRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_center',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_vXZK',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientBalanceForAction',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_size',
        type: 'uint256',
      },
    ],
    name: 'MinRollupSizeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'MinVoteTokenAmountChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RollerAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_relayer',
        type: 'address',
      },
    ],
    name: 'RollerRemoved',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_newRollers',
        type: 'address[]',
      },
    ],
    name: 'addRollers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'pool',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'roller',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'rollupSize',
            type: 'uint256',
          },
        ],
        internalType: 'struct CanDoRollupParams',
        name: '_params',
        type: 'tuple',
      },
    ],
    name: 'canDoRollup',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newMinRollupSize',
        type: 'uint256',
      },
    ],
    name: 'changeMinRollupSize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newMinVoteTokenAmount',
        type: 'uint256',
      },
    ],
    name: 'changeMinVoteTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isRoller',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minVoteTokenAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_oldRollers',
        type: 'address[]',
      },
    ],
    name: 'removeRollers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vXZK',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610a2a380380610a2a83398101604081905261002f9161008f565b600080546001600160a01b039384166001600160a01b03199182161790915569152d02c7e14af68000006002556001600355600480549290931691161790556100c2565b80516001600160a01b038116811461008a57600080fd5b919050565b600080604083850312156100a257600080fd5b6100ab83610073565b91506100b960208401610073565b90509250929050565b610959806100d16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637ea73115116100715780637ea7311514610159578063a2fb4e0f1461017c578063bd3fb7051461018f578063dd53f8a1146101a2578063e254001c146101b5578063ecf773ec146101c857600080fd5b80631f02d715146100ae5780634ffd8c37146100de578063560f17bf1461011a57806367eb51aa1461012f57806374feb05914610142575b600080fd5b6000546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61010a6100ec3660046107e6565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020016100d5565b61012d61012836600461080a565b6101d1565b005b61012d61013d36600461087f565b610338565b61014b60025481565b6040519081526020016100d5565b61010a6101673660046107e6565b60016020526000908152604090205460ff1681565b61012d61018a36600461087f565b61042a565b61012d61019d36600461080a565b610515565b61010a6101b0366004610898565b610676565b6004546100c1906001600160a01b031681565b61014b60035481565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906108b0565b6001600160a01b0316146102655760405163177bc95160e11b815260040160405180910390fd5b60005b8181101561033357600060016000858585818110610288576102886108cd565b905060200201602081019061029d91906107e6565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106102d7576102d76108cd565b90506020020160208101906102ec91906107e6565b6001600160a01b03167f7aea1b5cb62b4de72b5cc424dd6bc8982496fbc12eabf4ec0a295e77a45601c060405160405180910390a28061032b816108e3565b915050610268565b505050565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a591906108b0565b6001600160a01b0316146103cc5760405163177bc95160e11b815260040160405180910390fd5b80600354036103ee576040516336a1c33f60e01b815260040160405180910390fd5b60038190556040518181527fe1f038c60e1a2d2ed2958fbb3feefb7f259dedc375ad27e6a53bf91e9fa2feca906020015b60405180910390a150565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049791906108b0565b6001600160a01b0316146104be5760405163177bc95160e11b815260040160405180910390fd5b80600254036104e0576040516336a1c33f60e01b815260040160405180910390fd5b60028190556040518181527f3435d40390b03876ac5cca635ea7f2c76126b18427354d029d29faeaf9c9765e9060200161041f565b600054604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561055e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058291906108b0565b6001600160a01b0316146105a95760405163177bc95160e11b815260040160405180910390fd5b60005b818110156103335760018060008585858181106105cb576105cb6108cd565b90506020020160208101906105e091906107e6565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061061a5761061a6108cd565b905060200201602081019061062f91906107e6565b6001600160a01b03167f7f479989413500d382af813fbbcbde6aafad79de8e12e5ffb1d2d198cadd5ae760405160405180910390a28061066e816108e3565b9150506105ac565b600061068860408301602084016107e6565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb495460ff166106f3576001600160a01b03811660009081526001602052604090205460ff166106f357604051632d062f3360e21b815260040160405180910390fd5b6003548360400135101561071a5760405163150a617b60e31b815260040160405180910390fd5b6002546004546001600160a01b03166370a0823161073e60408701602088016107e6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a6919061090a565b10156107c55760405163f241cafb60e01b815260040160405180910390fd5b50600192915050565b6001600160a01b03811681146107e357600080fd5b50565b6000602082840312156107f857600080fd5b8135610803816107ce565b9392505050565b6000806020838503121561081d57600080fd5b823567ffffffffffffffff8082111561083557600080fd5b818501915085601f83011261084957600080fd5b81358181111561085857600080fd5b8660208260051b850101111561086d57600080fd5b60209290920196919550909350505050565b60006020828403121561089157600080fd5b5035919050565b6000606082840312156108aa57600080fd5b50919050565b6000602082840312156108c257600080fd5b8151610803816107ce565b634e487b7160e01b600052603260045260246000fd5b60006001820161090357634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561091c57600080fd5b505191905056fea2646970667358221220e1342a7a242039385a1a6325a069fd31ceec81eeea306e21ddbbbdbd736dc71864736f6c63430008140033';

type MystikoRollerRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoRollerRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoRollerRegistry__factory extends ContractFactory {
  constructor(...args: MystikoRollerRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _center: string,
    _vXZK: string,
    overrides?: Overrides & { from?: string },
  ): Promise<MystikoRollerRegistry> {
    return super.deploy(_center, _vXZK, overrides || {}) as Promise<MystikoRollerRegistry>;
  }
  override getDeployTransaction(
    _center: string,
    _vXZK: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_center, _vXZK, overrides || {});
  }
  override attach(address: string): MystikoRollerRegistry {
    return super.attach(address) as MystikoRollerRegistry;
  }
  override connect(signer: Signer): MystikoRollerRegistry__factory {
    return super.connect(signer) as MystikoRollerRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoRollerRegistryInterface {
    return new utils.Interface(_abi) as MystikoRollerRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoRollerRegistry {
    return new Contract(address, _abi, signerOrProvider) as MystikoRollerRegistry;
  }
}
