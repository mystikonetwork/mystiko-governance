/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IMystikoAuditorRegistry,
  IMystikoAuditorRegistryInterface,
} from '../../../../../contracts/settings/pool/interfaces/IMystikoAuditorRegistry';

const _abi = [
  {
    inputs: [],
    name: 'queryAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'queryAuditorPublicKey',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IMystikoAuditorRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IMystikoAuditorRegistryInterface {
    return new utils.Interface(_abi) as IMystikoAuditorRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IMystikoAuditorRegistry {
    return new Contract(address, _abi, signerOrProvider) as IMystikoAuditorRegistry;
  }
}
