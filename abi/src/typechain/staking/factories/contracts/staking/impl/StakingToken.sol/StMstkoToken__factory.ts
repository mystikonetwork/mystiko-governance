/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  StMstkoToken,
  StMstkoTokenInterface,
} from '../../../../../contracts/staking/impl/StakingToken.sol/StMstkoToken';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMinter',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'minter',
        type: 'address',
      },
    ],
    name: 'MinterChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_stMstkoAmount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newMinter',
        type: 'address',
      },
    ],
    name: 'changeMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_stMstkoAmount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604080518082018252601581527f4d797374696b6f205374616b696e6720546f6b656e000000000000000000000060208083019182528351808501909452600784526673744d53544b4f60c81b9084015281519192916200007691600391620000a7565b5080516200008c906004906020840190620000a7565b5050600580546001600160a01b03191633179055506200018a565b828054620000b5906200014d565b90600052602060002090601f016020900481019282620000d9576000855562000124565b82601f10620000f457805160ff191683800117855562000124565b8280016001018555821562000124579182015b828111156200012457825182559160200191906001019062000107565b506200013292915062000136565b5090565b5b8082111562000132576000815560010162000137565b600181811c908216806200016257607f821691505b602082108114156200018457634e487b7160e01b600052602260045260246000fd5b50919050565b610d63806200019a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806339509351116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b8063395093511461019757806340c10f19146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b806318160ddd116100d357806318160ddd1461015057806323b872dd146101625780632c4d4d1814610175578063313ce5671461018857600080fd5b806306394c9b146100fa57806306fdde031461010f578063095ea7b31461012d575b600080fd5b61010d610108366004610b9d565b610260565b005b610117610304565b6040516101249190610bbf565b60405180910390f35b61014061013b366004610c14565b610396565b6040519015158152602001610124565b6002545b604051908152602001610124565b610140610170366004610c3e565b6103ae565b61010d610183366004610b9d565b6103d2565b60405160128152602001610124565b6101406101a5366004610c14565b610476565b61010d6101b8366004610c14565b6104b5565b6101546101cb366004610b9d565b6001600160a01b031660009081526020819052604090205490565b6101176104ee565b61010d6101fc366004610c14565b6104fd565b61014061020f366004610c14565b610532565b610140610222366004610c14565b6105c9565b610154610235366004610c7a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0316331461028b576040516327e1f1e560e01b815260040160405180910390fd5b6005546001600160a01b03828116911614156102ba576040516336a1c33f60e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b60606003805461031390610cad565b80601f016020809104026020016040519081016040528092919081815260200182805461033f90610cad565b801561038c5780601f106103615761010080835404028352916020019161038c565b820191906000526020600020905b81548152906001019060200180831161036f57829003601f168201915b5050505050905090565b6000336103a48185856105d7565b5060019392505050565b6000336103bc8582856106fc565b6103c785858561078e565b506001949350505050565b6005546001600160a01b031633146103fd576040516327e1f1e560e01b815260040160405180910390fd5b6006546001600160a01b038281169116141561042c576040516336a1c33f60e01b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a42590600090a250565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103a490829086906104b0908790610cfe565b6105d7565b6006546001600160a01b031633146104e057604051639cdc2ed560e01b815260040160405180910390fd5b6104ea828261095c565b5050565b60606004805461031390610cad565b6006546001600160a01b0316331461052857604051639cdc2ed560e01b815260040160405180910390fd5b6104ea8282610a3b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105bc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103c782868684036105d7565b6000336103a481858561078e565b6001600160a01b0383166106395760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b3565b6001600160a01b03821661069a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610788578181101561077b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b3565b61078884848484036105d7565b50505050565b6001600160a01b0383166107f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b3565b6001600160a01b0382166108545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b3565b6001600160a01b038316600090815260208190526040902054818110156108cc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610903908490610cfe565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161094f91815260200190565b60405180910390a3610788565b6001600160a01b0382166109b25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b3565b80600260008282546109c49190610cfe565b90915550506001600160a01b038216600090815260208190526040812080548392906109f1908490610cfe565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a9b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b3565b6001600160a01b03821660009081526020819052604090205481811015610b0f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b3565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b3e908490610d16565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106ef565b80356001600160a01b0381168114610b9857600080fd5b919050565b600060208284031215610baf57600080fd5b610bb882610b81565b9392505050565b600060208083528351808285015260005b81811015610bec57858101830151858201604001528201610bd0565b81811115610bfe576000604083870101525b50601f01601f1916929092016040019392505050565b60008060408385031215610c2757600080fd5b610c3083610b81565b946020939093013593505050565b600080600060608486031215610c5357600080fd5b610c5c84610b81565b9250610c6a60208501610b81565b9150604084013590509250925092565b60008060408385031215610c8d57600080fd5b610c9683610b81565b9150610ca460208401610b81565b90509250929050565b600181811c90821680610cc157607f821691505b60208210811415610ce257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d1157610d11610ce8565b500190565b600082821015610d2857610d28610ce8565b50039056fea26469706673582212206663ac87964c26c40ba85076ad8911bf6f996ea3772c1d06567f20eff94b6c5964736f6c63430008090033';

type StMstkoTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StMstkoTokenConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StMstkoToken__factory extends ContractFactory {
  constructor(...args: StMstkoTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<StMstkoToken> {
    return super.deploy(overrides || {}) as Promise<StMstkoToken>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: string }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StMstkoToken {
    return super.attach(address) as StMstkoToken;
  }
  override connect(signer: Signer): StMstkoToken__factory {
    return super.connect(signer) as StMstkoToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StMstkoTokenInterface {
    return new utils.Interface(_abi) as StMstkoTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): StMstkoToken {
    return new Contract(address, _abi, signerOrProvider) as StMstkoToken;
  }
}
