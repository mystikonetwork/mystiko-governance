/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  StMstkoToken,
  StMstkoTokenInterface,
} from '../../../../../contracts/staking/impl/StakingToken.sol/StMstkoToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mstko',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMinter',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'minter',
        type: 'address',
      },
    ],
    name: 'MinterChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StMstkoBurned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StMstkoMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_burnAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_mstkoAmount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newMinter',
        type: 'address',
      },
    ],
    name: 'changeMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_mintAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_mstkoAmount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620014c7380380620014c78339810160408190526200003491620001ed565b604080518082018252601581527f4d797374696b6f205374616b696e6720546f6b656e000000000000000000000060208083019182528351808501909452600784526673744d53544b4f60c81b908401528151919291620000989160039162000147565b508051620000ae90600490602084019062000147565b505050620000cb620000c5620000f160201b60201c565b620000f5565b600680546001600160a01b0319166001600160a01b03929092169190911790556200025c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000155906200021f565b90600052602060002090601f016020900481019282620001795760008555620001c4565b82601f106200019457805160ff1916838001178555620001c4565b82800160010185558215620001c4579182015b82811115620001c4578251825591602001919060010190620001a7565b50620001d2929150620001d6565b5090565b5b80821115620001d25760008155600101620001d7565b6000602082840312156200020057600080fd5b81516001600160a01b03811681146200021857600080fd5b9392505050565b600181811c908216806200023457607f821691505b602082108114156200025657634e487b7160e01b600052602260045260246000fd5b50919050565b61125b806200026c6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d714610214578063a9059cbb14610227578063dd62ed3e1461023a578063f2fde38b14610273578063f5298aca1461028657600080fd5b806370a08231146101c0578063715018a6146101e95780638da5cb5b146101f157806395d89b411461020c57600080fd5b806323b872dd116100de57806323b872dd146101785780632c4d4d181461018b578063313ce5671461019e57806339509351146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e578063156e29f61461015157806318160ddd14610166575b600080fd5b610118610299565b6040516101259190610ffc565b60405180910390f35b61014161013c36600461104b565b61032b565b6040519015158152602001610125565b61016461015f366004611075565b610343565b005b6002545b604051908152602001610125565b6101416101863660046110a8565b6103c9565b6101646101993660046110e4565b6103ef565b60405160128152602001610125565b6101416101bb36600461104b565b61049b565b61016a6101ce3660046110e4565b6001600160a01b031660009081526020819052604090205490565b6101646104da565b6005546040516001600160a01b039091168152602001610125565b610118610510565b61014161022236600461104b565b61051f565b61014161023536600461104b565b6105bc565b61016a6102483660046110ff565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101646102813660046110e4565b6105ca565b610164610294366004611075565b610665565b6060600380546102a890611132565b80601f01602080910402602001604051908101604052809291908181526020018280546102d490611132565b80156103215780601f106102f657610100808354040283529160200191610321565b820191906000526020600020905b81548152906001019060200180831161030457829003601f168201915b5050505050905090565b6000336103398185856106e1565b5060019392505050565b6007546001600160a01b0316331461036e57604051639cdc2ed560e01b815260040160405180910390fd5b600654610386906001600160a01b0316843084610806565b6103908383610877565b6040518281527f4eb7e26d980a78089a1c5b4f80aa3cc211f02de833c85cc368a8ca6a19c623bf906020015b60405180910390a1505050565b6000336103d7858285610956565b6103e28585856109e2565b60019150505b9392505050565b6005546001600160a01b031633146104225760405162461bcd60e51b81526004016104199061116d565b60405180910390fd5b6007546001600160a01b0382811691161415610451576040516336a1c33f60e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040517fb6b8f1859c5c352e5ffad07d0f77e384ac725512c015bd3a3ffc885831c8a42590600090a250565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061033990829086906104d59087906111b8565b6106e1565b6005546001600160a01b031633146105045760405162461bcd60e51b81526004016104199061116d565b61050e6000610bb0565b565b6060600480546102a890611132565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610419565b6105b182868684036106e1565b506001949350505050565b6000336103398185856109e2565b6005546001600160a01b031633146105f45760405162461bcd60e51b81526004016104199061116d565b6001600160a01b0381166106595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610419565b61066281610bb0565b50565b6007546001600160a01b0316331461069057604051639cdc2ed560e01b815260040160405180910390fd5b61069a8383610c02565b6006546106b1906001600160a01b03168483610d4d565b6040518281527f815d7f3ad3bbfedf493a1005308593821d5ad022a29d49bcc4c5786ff7106441906020016103bc565b6001600160a01b0383166107435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610419565b6001600160a01b0382166107a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610419565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108719085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d7d565b50505050565b6001600160a01b0382166108cd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610419565b80600260008282546108df91906111b8565b90915550506001600160a01b0382166000908152602081905260408120805483929061090c9084906111b8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461087157818110156109d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610419565b61087184848484036106e1565b6001600160a01b038316610a465760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610419565b6001600160a01b038216610aa85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610419565b6001600160a01b03831660009081526020819052604090205481811015610b205760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610419565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b579084906111b8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ba391815260200190565b60405180910390a3610871565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610c625760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610419565b6001600160a01b03821660009081526020819052604090205481811015610cd65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610419565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610d059084906111d0565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016107f9565b505050565b6040516001600160a01b038316602482015260448101829052610d4890849063a9059cbb60e01b9060640161083a565b6000610dd2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e4f9092919063ffffffff16565b805190915015610d485780806020019051810190610df091906111e7565b610d485760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610419565b6060610e5e8484600085610e66565b949350505050565b606082471015610ec75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610419565b6001600160a01b0385163b610f1e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610419565b600080866001600160a01b03168587604051610f3a9190611209565b60006040518083038185875af1925050503d8060008114610f77576040519150601f19603f3d011682016040523d82523d6000602084013e610f7c565b606091505b5091509150610f8c828286610f97565b979650505050505050565b60608315610fa65750816103e8565b825115610fb65782518084602001fd5b8160405162461bcd60e51b81526004016104199190610ffc565b60005b83811015610feb578181015183820152602001610fd3565b838111156108715750506000910152565b602081526000825180602084015261101b816040850160208701610fd0565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461104657600080fd5b919050565b6000806040838503121561105e57600080fd5b6110678361102f565b946020939093013593505050565b60008060006060848603121561108a57600080fd5b6110938461102f565b95602085013595506040909401359392505050565b6000806000606084860312156110bd57600080fd5b6110c68461102f565b92506110d46020850161102f565b9150604084013590509250925092565b6000602082840312156110f657600080fd5b6103e88261102f565b6000806040838503121561111257600080fd5b61111b8361102f565b91506111296020840161102f565b90509250929050565b600181811c9082168061114657607f821691505b6020821081141561116757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156111cb576111cb6111a2565b500190565b6000828210156111e2576111e26111a2565b500390565b6000602082840312156111f957600080fd5b815180151581146103e857600080fd5b6000825161121b818460208701610fd0565b919091019291505056fea26469706673582212209e38c7a38c5d0059d87f6944476fe990da4232493869100c0b08eb2b4541c5e164736f6c63430008090033';

type StMstkoTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StMstkoTokenConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StMstkoToken__factory extends ContractFactory {
  constructor(...args: StMstkoTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(_mstko: string, overrides?: Overrides & { from?: string }): Promise<StMstkoToken> {
    return super.deploy(_mstko, overrides || {}) as Promise<StMstkoToken>;
  }
  override getDeployTransaction(
    _mstko: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_mstko, overrides || {});
  }
  override attach(address: string): StMstkoToken {
    return super.attach(address) as StMstkoToken;
  }
  override connect(signer: Signer): StMstkoToken__factory {
    return super.connect(signer) as StMstkoToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StMstkoTokenInterface {
    return new utils.Interface(_abi) as StMstkoTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): StMstkoToken {
    return new Contract(address, _abi, signerOrProvider) as StMstkoToken;
  }
}
