/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoVoteToken, MystikoVoteTokenInterface } from '../../../contracts/token/MystikoVoteToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_xzk',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CheckpointUnorderedInsertion',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ECDSAInvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'ECDSAInvalidSignatureLength',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'ECDSAInvalidSignatureS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'increasedSupply',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'cap',
        type: 'uint256',
      },
    ],
    name: 'ERC20ExceededSafeSupply',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'allowance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientAllowance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'approver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidApprover',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidReceiver',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSender',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSpender',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidUnderlying',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
    ],
    name: 'ERC2612ExpiredSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'ERC2612InvalidSigner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
      {
        internalType: 'uint48',
        name: 'clock',
        type: 'uint48',
      },
    ],
    name: 'ERC5805FutureLookup',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ERC6372InconsistentClock',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'currentNonce',
        type: 'uint256',
      },
    ],
    name: 'InvalidAccountNonce',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidShortString',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'bits',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCastOverflowedUintDowncast',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
    ],
    name: 'StringTooLong',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'expiry',
        type: 'uint256',
      },
    ],
    name: 'VotesExpiredSignature',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fromDelegate',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'toDelegate',
        type: 'address',
      },
    ],
    name: 'DelegateChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousVotes',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newVotes',
        type: 'uint256',
      },
    ],
    name: 'DelegateVotesChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'EIP712DomainChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'CLOCK_MODE',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'pos',
        type: 'uint32',
      },
    ],
    name: 'checkpoints',
    outputs: [
      {
        components: [
          {
            internalType: 'uint48',
            name: '_key',
            type: 'uint48',
          },
          {
            internalType: 'uint208',
            name: '_value',
            type: 'uint208',
          },
        ],
        internalType: 'struct Checkpoints.Checkpoint208',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clock',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
    ],
    name: 'delegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'expiry',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'delegateBySig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'delegates',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'depositFor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eip712Domain',
    outputs: [
      {
        internalType: 'bytes1',
        name: 'fields',
        type: 'bytes1',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256[]',
        name: 'extensions',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'getVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'nonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'numCheckpoints',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'underlying',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'withdrawTo',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x61018060405234801561001157600080fd5b5060405161277d38038061277d83398101604081905261003091610247565b806040518060400160405280601281526020017126bcb9ba34b5b7902b37ba32902a37b5b2b760711b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601281526020017126bcb9ba34b5b7902b37ba32902a37b5b2b760711b8152506040518060400160405280600481526020016376585a4b60e01b81525081600390816100ce9190610316565b5060046100db8282610316565b506100eb915083905060056101d6565b610120526100fa8160066101d6565b61014052815160208084019190912060e052815190820120610100524660a05261018760e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c08190526001600160a01b0383160390506101c35760405163438d6fe360e01b81523060048201526024015b60405180910390fd5b6001600160a01b03166101605250610446565b60006020835110156101f2576101eb83610209565b9050610203565b816101fd8482610316565b5060ff90505b92915050565b600080829050601f81511115610234578260405163305a27a960e01b81526004016101ba91906103d4565b805161023f82610422565b179392505050565b60006020828403121561025957600080fd5b81516001600160a01b038116811461027057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102a157607f821691505b6020821081036102c157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031157806000526020600020601f840160051c810160208510156102ee5750805b601f840160051c820191505b8181101561030e57600081556001016102fa565b50505b505050565b81516001600160401b0381111561032f5761032f610277565b6103438161033d845461028d565b846102c7565b6020601f821160018114610377576000831561035f5750848201515b600019600385901b1c1916600184901b17845561030e565b600084815260208120601f198516915b828110156103a75787850151825560209485019460019092019101610387565b50848210156103c55786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b8181101561040257602081860181015160408684010152016103e5565b506000604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102c15760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610160516122bd6104c0600039600081816102d9015281816105670152818161061a0152610bff01526000610f8401526000610f5701526000610d6001526000610d3801526000610c9301526000610cbd01526000610ce701526122bd6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636fcfff45116100de57806395d89b4111610097578063c3cda52011610071578063c3cda520146103d3578063d505accf146103e6578063dd62ed3e146103f9578063f1127ed81461043257600080fd5b806395d89b41146103a55780639ab24eb0146103ad578063a9059cbb146103c057600080fd5b80636fcfff45146102fd57806370a08231146103255780637ecebe001461034e57806384b0196e146103615780638e539e8c1461037c57806391ddadf41461038f57600080fd5b8063313ce5671161014b5780634bf5d7e9116101255780634bf5d7e914610254578063587cde1e1461027e5780635c19a95c146102c25780636f307dc3146102d757600080fd5b8063313ce5671461021f5780633644e515146102395780633a46b1a81461024157600080fd5b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101d4578063205c2878146101e657806323b872dd146101f95780632f4f21e21461020c575b600080fd5b61019b610471565b6040516101a89190611e6e565b60405180910390f35b6101c46101bf366004611e98565b610503565b60405190151581526020016101a8565b6002545b6040519081526020016101a8565b6101c46101f4366004611e98565b61051d565b6101c4610207366004611ec2565b610596565b6101c461021a366004611e98565b6105bc565b61022761064b565b60405160ff90911681526020016101a8565b6101d861065a565b6101d861024f366004611e98565b610664565b60408051808201909152600e81526d06d6f64653d74696d657374616d760941b602082015261019b565b6102aa61028c366004611eff565b6001600160a01b039081166000908152600860205260409020541690565b6040516001600160a01b0390911681526020016101a8565b6102d56102d0366004611eff565b6106db565b005b7f00000000000000000000000000000000000000000000000000000000000000006102aa565b61031061030b366004611eff565b6106ea565b60405163ffffffff90911681526020016101a8565b6101d8610333366004611eff565b6001600160a01b031660009081526020819052604090205490565b6101d861035c366004611eff565b6106f5565b610369610700565b6040516101a89796959493929190611f1a565b6101d861038a366004611fb2565b610746565b60405165ffffffffffff421681526020016101a8565b61019b6107a6565b6101d86103bb366004611eff565b6107b5565b6101c46103ce366004611e98565b6107e5565b6102d56103e1366004611fda565b6107f3565b6102d56103f4366004612034565b6108b0565b6101d86104073660046120a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104456104403660046120d4565b6109ea565b60408051825165ffffffffffff1681526020928301516001600160d01b031692810192909252016101a8565b60606003805461048090612114565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90612114565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b5050505050905090565b600033610511818585610a08565b60019150505b92915050565b6000306001600160a01b038416036105585760405163ec442f0560e01b81526001600160a01b03841660048201526024015b60405180910390fd5b6105623383610a1a565b61058d7f00000000000000000000000000000000000000000000000000000000000000008484610a50565b50600192915050565b6000336105a4858285610aaf565b6105af858585610b2d565b60019150505b9392505050565b6000333081036105e157604051634b637e8f60e11b815230600482015260240161054f565b306001600160a01b038516036106155760405163ec442f0560e01b81526001600160a01b038516600482015260240161054f565b6106417f0000000000000000000000000000000000000000000000000000000000000000823086610b8c565b6105118484610bc5565b6000610655610bfb565b905090565b6000610655610c86565b60004265ffffffffffff811683106106a057604051637669fc0f60e11b81526004810184905265ffffffffffff8216602482015260440161054f565b6106ca6106ac84610db1565b6001600160a01b038616600090815260096020526040902090610de8565b6001600160d01b0316949350505050565b336106e68183610e9e565b5050565b600061051782610f10565b600061051782610f32565b600060608060008060006060610714610f50565b61071c610f7d565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60004265ffffffffffff8116831061078257604051637669fc0f60e11b81526004810184905265ffffffffffff8216602482015260440161054f565b61079661078e84610db1565b600a90610de8565b6001600160d01b03169392505050565b60606004805461048090612114565b6001600160a01b03811660009081526009602052604081206107d690610faa565b6001600160d01b031692915050565b600033610511818585610b2d565b8342111561081757604051632341d78760e11b81526004810185905260240161054f565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610891906108899060a00160405160208183030381529060405280519060200120610fe3565b858585611010565b905061089d818761103e565b6108a78188610e9e565b50505050505050565b834211156108d45760405163313c898160e11b81526004810185905260240161054f565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109218c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061097c82610fe3565b9050600061098c82878787611010565b9050896001600160a01b0316816001600160a01b0316146109d3576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161054f565b6109de8a8a8a610a08565b50505050505050505050565b60408051808201909152600080825260208201526105b58383611091565b610a1583838360016110c7565b505050565b6001600160a01b038216610a4457604051634b637e8f60e11b81526000600482015260240161054f565b6106e68260008361119c565b6040516001600160a01b03838116602483015260448201839052610a1591859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506111a7565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610b275781811015610b1857604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161054f565b610b27848484840360006110c7565b50505050565b6001600160a01b038316610b5757604051634b637e8f60e11b81526000600482015260240161054f565b6001600160a01b038216610b815760405163ec442f0560e01b81526000600482015260240161054f565b610a1583838361119c565b6040516001600160a01b038481166024830152838116604483015260648201839052610b279186918216906323b872dd90608401610a7d565b6001600160a01b038216610bef5760405163ec442f0560e01b81526000600482015260240161054f565b6106e66000838361119c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c77575060408051601f3d908101601f19168201909252610c749181019061214e565b60015b610c815750601290565b919050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610cdf57507f000000000000000000000000000000000000000000000000000000000000000046145b15610d0957507f000000000000000000000000000000000000000000000000000000000000000090565b610655604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600065ffffffffffff821115610de4576040516306dfcc6560e41b8152603060048201526024810183905260440161054f565b5090565b815460009081816005811115610e47576000610e038461120a565b610e0d9085612181565b60008881526020902090915081015465ffffffffffff9081169087161015610e3757809150610e45565b610e42816001612194565b92505b505b6000610e55878785856112f2565b90508015610e9057610e7a87610e6c600184612181565b600091825260209091200190565b54600160301b90046001600160d01b0316610e93565b60005b979650505050505050565b6001600160a01b0382811660008181526008602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610a158183610f0b86611354565b611372565b6001600160a01b038116600090815260096020526040812054610517906114de565b6001600160a01b038116600090815260076020526040812054610517565b60606106557f0000000000000000000000000000000000000000000000000000000000000000600561150f565b60606106557f0000000000000000000000000000000000000000000000000000000000000000600661150f565b80546000908015610fda57610fc483610e6c600184612181565b54600160301b90046001600160d01b03166105b5565b60009392505050565b6000610517610ff0610c86565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080611022888888886115ba565b9250925092506110328282611689565b50909695505050505050565b6001600160a01b0382166000908152600760205260409020805460018101909155818114610a15576040516301d4b62360e61b81526001600160a01b03841660048201526024810182905260440161054f565b60408051808201909152600080825260208201526001600160a01b03831660009081526009602052604090206105b59083611742565b6001600160a01b0384166110f15760405163e602df0560e01b81526000600482015260240161054f565b6001600160a01b03831661111b57604051634a1406b160e11b81526000600482015260240161054f565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610b2757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161118e91815260200190565b60405180910390a350505050565b610a158383836117b2565b60006111bc6001600160a01b03841683611819565b905080516000141580156111e15750808060200190518101906111df91906121a7565b155b15610a1557604051635274afe760e01b81526001600160a01b038416600482015260240161054f565b60008160000361121c57506000919050565b6000600161122984611827565b901c6001901b90506001818481611242576112426121c9565b048201901c9050600181848161125a5761125a6121c9565b048201901c90506001818481611272576112726121c9565b048201901c9050600181848161128a5761128a6121c9565b048201901c905060018184816112a2576112a26121c9565b048201901c905060018184816112ba576112ba6121c9565b048201901c905060018184816112d2576112d26121c9565b048201901c90506105b5818285816112ec576112ec6121c9565b046118bb565b60005b8183101561134c57600061130984846118d1565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff16111561133857809250611346565b611343816001612194565b93505b506112f5565b509392505050565b6001600160a01b038116600090815260208190526040812054610517565b816001600160a01b0316836001600160a01b0316141580156113945750600081115b15610a15576001600160a01b0383161561143c576001600160a01b038316600090815260096020526040812081906113d7906118ec6113d2866118f8565b61192c565b6001600160d01b031691506001600160d01b03169150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611431929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610a15576001600160a01b038216600090815260096020526040812081906114759061195e6113d2866118f8565b6001600160d01b031691506001600160d01b03169150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516114cf929190918252602082015260400190565b60405180910390a25050505050565b600063ffffffff821115610de4576040516306dfcc6560e41b8152602060048201526024810183905260440161054f565b606060ff8314611529576115228361196a565b9050610517565b81805461153590612114565b80601f016020809104026020016040519081016040528092919081815260200182805461156190612114565b80156115ae5780601f10611583576101008083540402835291602001916115ae565b820191906000526020600020905b81548152906001019060200180831161159157829003601f168201915b50505050509050610517565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156115f5575060009150600390508261167f565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611649573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116755750600092506001915082905061167f565b9250600091508190505b9450945094915050565b600082600381111561169d5761169d6121df565b036116a6575050565b60018260038111156116ba576116ba6121df565b036116d85760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156116ec576116ec6121df565b0361170d5760405163fce698f760e01b81526004810182905260240161054f565b6003826003811115611721576117216121df565b036106e6576040516335e2f38360e21b81526004810182905260240161054f565b6040805180820190915260008082526020820152826000018263ffffffff1681548110611771576117716121f5565b60009182526020918290206040805180820190915291015465ffffffffffff81168252600160301b90046001600160d01b0316918101919091529392505050565b6117bd8383836119a9565b6001600160a01b03831661180e5760006117d660025490565b90506001600160d01b038082111561180b57604051630e58ae9360e11b8152600481018390526024810182905260440161054f565b50505b610a15838383611ad3565b60606105b583836000611b49565b600080608083901c1561183c57608092831c92015b604083901c1561184e57604092831c92015b602083901c1561186057602092831c92015b601083901c1561187257601092831c92015b600883901c1561188457600892831c92015b600483901c1561189657600492831c92015b600283901c156118a857600292831c92015b600183901c156105175760010192915050565b60008183106118ca57816105b5565b5090919050565b60006118e0600284841861220b565b6105b590848416612194565b60006105b5828461222d565b60006001600160d01b03821115610de4576040516306dfcc6560e41b815260d060048201526024810183905260440161054f565b6000806119514261194961193f88610faa565b868863ffffffff16565b879190611be6565b915091505b935093915050565b60006105b5828461224c565b6060600061197783611bf4565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b0383166119d45780600260008282546119c99190612194565b90915550611a469050565b6001600160a01b03831660009081526020819052604090205481811015611a275760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161054f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611a6257600280548290039055611a81565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ac691815260200190565b60405180910390a3505050565b6001600160a01b038316611af557611af2600a61195e6113d2846118f8565b50505b6001600160a01b038216611b1757611b14600a6118ec6113d2846118f8565b50505b6001600160a01b03838116600090815260086020526040808220548584168352912054610a1592918216911683611372565b606081471015611b6e5760405163cd78605960e01b815230600482015260240161054f565b600080856001600160a01b03168486604051611b8a919061226b565b60006040518083038185875af1925050503d8060008114611bc7576040519150601f19603f3d011682016040523d82523d6000602084013e611bcc565b606091505b5091509150611bdc868383611c1c565b9695505050505050565b600080611951858585611c78565b600060ff8216601f81111561051757604051632cd44ac360e21b815260040160405180910390fd5b606082611c3157611c2c82611df2565b6105b5565b8151158015611c4857506001600160a01b0384163b155b15611c7157604051639996b31560e01b81526001600160a01b038516600482015260240161054f565b50806105b5565b825460009081908015611d97576000611c9687610e6c600185612181565b60408051808201909152905465ffffffffffff808216808452600160301b9092046001600160d01b031660208401529192509087161015611cea57604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff808816911603611d365784611d0d88610e6c600186612181565b80546001600160d01b0392909216600160301b0265ffffffffffff909216919091179055611d87565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160301b029216919091179101555b6020015192508391506119569050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b029190931617920191909155905081611956565b805115611e025780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60005b83811015611e39578181015183820152602001611e21565b50506000910152565b60008151808452611e5a816020860160208601611e1e565b601f01601f19169290920160200192915050565b6020815260006105b56020830184611e42565b80356001600160a01b0381168114610c8157600080fd5b60008060408385031215611eab57600080fd5b611eb483611e81565b946020939093013593505050565b600080600060608486031215611ed757600080fd5b611ee084611e81565b9250611eee60208501611e81565b929592945050506040919091013590565b600060208284031215611f1157600080fd5b6105b582611e81565b60ff60f81b8816815260e060208201526000611f3960e0830189611e42565b8281036040840152611f4b8189611e42565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611fa1578351835260209384019390920191600101611f83565b50909b9a5050505050505050505050565b600060208284031215611fc457600080fd5b5035919050565b60ff81168114611e1b57600080fd5b60008060008060008060c08789031215611ff357600080fd5b611ffc87611e81565b95506020870135945060408701359350606087013561201a81611fcb565b9598949750929560808101359460a0909101359350915050565b600080600080600080600060e0888a03121561204f57600080fd5b61205888611e81565b965061206660208901611e81565b95506040880135945060608801359350608088013561208481611fcb565b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156120b457600080fd5b6120bd83611e81565b91506120cb60208401611e81565b90509250929050565b600080604083850312156120e757600080fd5b6120f083611e81565b9150602083013563ffffffff8116811461210957600080fd5b809150509250929050565b600181811c9082168061212857607f821691505b60208210810361214857634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561216057600080fd5b81516105b581611fcb565b634e487b7160e01b600052601160045260246000fd5b818103818111156105175761051761216b565b808201808211156105175761051761216b565b6000602082840312156121b957600080fd5b815180151581146105b557600080fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008261222857634e487b7160e01b600052601260045260246000fd5b500490565b6001600160d01b0382811682821603908111156105175761051761216b565b6001600160d01b0381811683821601908111156105175761051761216b565b6000825161227d818460208701611e1e565b919091019291505056fea26469706673582212202574d1e79ce0adc8e63bb25ef9594d309fb3007396916713472fc1a9ed13d40664736f6c634300081a0033';

type MystikoVoteTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoVoteTokenConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoVoteToken__factory extends ContractFactory {
  constructor(...args: MystikoVoteTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(_xzk: string, overrides?: Overrides & { from?: string }): Promise<MystikoVoteToken> {
    return super.deploy(_xzk, overrides || {}) as Promise<MystikoVoteToken>;
  }
  override getDeployTransaction(_xzk: string, overrides?: Overrides & { from?: string }): TransactionRequest {
    return super.getDeployTransaction(_xzk, overrides || {});
  }
  override attach(address: string): MystikoVoteToken {
    return super.attach(address) as MystikoVoteToken;
  }
  override connect(signer: Signer): MystikoVoteToken__factory {
    return super.connect(signer) as MystikoVoteToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoVoteTokenInterface {
    return new utils.Interface(_abi) as MystikoVoteTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoVoteToken {
    return new Contract(address, _abi, signerOrProvider) as MystikoVoteToken;
  }
}
